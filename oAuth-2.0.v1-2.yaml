openapi: 3.0.0
info:
  title: oAuth 2.0
  version: '1.0'
  description: 'oAuth 2.0 is the industry-standard protocol for access delegation or authorization, used as a way for Internet users to grant website or applications access to their information on other websites but without giving them the passwords'
servers:
  - {}
paths:
  /oauth/authorize:
    get:
      summary: Consent Page
      tags: []
      responses:
        '200':
          description: User will be redirected back to the redirect_uri regardless of the result of the consent process
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImp0aSI6ImUzMTU5ZjIyLTI1OTQtNGNiYS1hMDMzLTRhNWY4MGQ1MmQwZiIsImlhdCI6MTU4OTg3NjI4MywiZXhwIjoxNTg5ODc5ODgzfQ.H4DoU_zLXSUvzkSKIdYR3cXhwoQ-9gqkg491DsyTzg4
                  state:
                    type: string
              examples:
                Consent Allowed Example:
                  value:
                    code: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImp0aSI6ImUzMTU5ZjIyLTI1OTQtNGNiYS1hMDMzLTRhNWY4MGQ1MmQwZiIsImlhdCI6MTU4OTg3NjI4MywiZXhwIjoxNTg5ODc5ODgzfQ.H4DoU_zLXSUvzkSKIdYR3cXhwoQ-9gqkg491DsyTzg4
                    state: b9deb6f6-63bd-46bb
                Consent Denied Example:
                  value:
                    error: access_denied
                    state: b9deb6f6-63bd-46bb
      operationId: get-auth
      description: To retrieve consent page for user to authorize the application
      parameters:
        - schema:
            type: string
            format: uuid
            example: b9deb6f6-63bd-46bb-823e-dd6ee7200fe8
          in: query
          name: client_id
          description: 'When you register your application, Xendit provides you a Client ID'
          required: true
        - schema:
            type: string
            example: code
          in: query
          name: response_type
          required: true
          description: Set to `code`
        - schema:
            type: string
            example: VIRTUAL_ACCOUNT.READ
          in: query
          name: scopes
          description: A space-separated list of scopes. Default application scopes if no scopes attached
        - schema:
            type: string
            format: ''
          in: query
          name: redirect_uri
          required: true
          description: 'The URI to redirect to after the user grants or denies permission. This URI needs to have been entered in the Redirect URI whitelist that you specified when you registered your application. The value of `redirect_uri` here must exactly match one of the values you entered when you registered your application, including upper or lowercase, terminating slashes, and such'
        - schema:
            type: string
          in: query
          name: state
          description: 'The state can be useful for correlating requests and responses. Because your `redirect_uri` can be guessed, using a state value can increase your assurance that an incoming connection is the result of an authentication request. If you generate a random string, or encode the hash of some client state, such as cookie, in this state variable, you can validate the response to additionally ensure that both the request and response originated in the same browser. This provides protection against attacks such as cross-site request forgery. See RFC 6749'
      security: []
    parameters: []
  /oauth/tokens:
    parameters: []
    post:
      summary: Create Access Token
      operationId: posttokens
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token_type:
                    type: string
                    description: ''
                  access_token:
                    type: string
                    description: Use this token as authorization to request to Xendit APIs
                  expires_at:
                    type: string
                    description: Access token expiration time. Timezone UTC +0
                  refresh_token:
                    type: string
                    description: Use this token to request a new access token after access token has expired
                  scope:
                    type: string
              examples:
                Access Token Generated:
                  value:
                    token_type: Bearer
                    access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJidXNpbmVzc19pZCI6IjViOGY3ZDg2M2JjNzllOTA3ZmU0OTA1MCIsImNsaWVudF9pZCI6IjFkY2MyNDIwLTY5YjktNGE0YS05MWFmLWZlYTAwYzY2OThlNyIsImVudmlyb25tZW50IjoiREVWRUxPUE1FTlQiLCJpYXQiOjE1ODkyNzE2NTgsImV4cCI6NDcxMzQ3NDA1OH0.N4XSx2CmKkH0OahAn4-MUyK6UA4o80USUVbqJkk2jrE
                    expires_at: '2020-07-01T17:00:00Z'
                    refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJidXNpbmVzc19pZCI6IjViOGY3ZDg2M2JjNzllOTA3ZmU0OTA1MCIsImNsaWVudF9pZCI6IjFkY2MyNDIwLTY5YjktNGE0YS05MWFmLWZlYTAwYzY2OThlNyIsInNjb3BlcyI6WyJJTlZPSUNFLlJFQUQiLCJJTlZPSUNFLldSSVRFIl0sImVudmlyb25tZW50IjoiREVWRUxPUE1FTlQiLCJpYXQiOjE1ODkyODEzODgsImV4cCI6MTU4OTI4MTM4OH0.nw6MdpfdVy3Q9G7r5X2iTxBV59NeS8l0J--P0b4mHrg
                    scope: virtual_accounts.write ewallets.write
                Access Token Refreshed:
                  value:
                    token_type: Bearer
                    access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJidXNpbmVzc19pZCI6IjViOGY3ZDg2M2JjNzllOTA3ZmU0OTA1MCIsImNsaWVudF9pZCI6IjFkY2MyNDIwLTY5YjktNGE0YS05MWFmLWZlYTAwYzY2OThlNyIsImVudmlyb25tZW50IjoiREVWRUxPUE1FTlQiLCJpYXQiOjE1ODkyNzE2NTgsImV4cCI6NDcxMzQ3NDA1OH0.N4XSx2CmKkH0OahAn4-MUyK6UA4o80USUVbqJkk2jrE
                    expires_at: '2020-07-01T17:00:00Z'
                    scope: virtual_accounts.write ewallets.write
          headers:
            Cache-Control:
              schema:
                type: string
                example: ''
                enum:
                  - no-store
              description: no-cache
              required: true
            Pragma:
              schema:
                type: string
                enum:
                  - no-cache
              required: true
              description: no-store
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  message:
                    type: string
                  errors:
                    type: string
              examples:
                Invalid Request:
                  value:
                    error_code: API_VALIDATION_ERROR
                    message: There was an error with the format submitted to the server
                Expired Auth Code or Mismatch Redirect URI:
                  value:
                    error_code: INVALID_GRANT
                    message: The authorization code is invalid or expired or redirect URI does not match
                Invalid Scope:
                  value:
                    error_code: INVALID_SCOPE
                    message: Requested scope is invalid. Please refer to documentation for full scope list
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  message:
                    type: string
                  '':
                    type: string
              examples:
                Unauthorized:
                  value:
                    error_code: INVALID_TOKEN
                    message: The access token expired
                Invalid Client:
                  value:
                    error_code: INVALID_CLIENT
                    message: Request contains an invalid client ID or secret. Please retry with the correct credential
            application/xml:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  message:
                    type: string
              examples:
                Expired Scenario:
                  value:
                    error_code: INVALID_TOKEN
                    message: The access token expired
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: Authorization code that was retrieved after user gave consent to your application at given scopes
                  enum:
                    - authorization_code
                    - client_credentials
                    - refresh_token
                code:
                  type: string
                client_secret:
                  type: string
                refresh_token:
                  type: string
                client_id:
                  type: string
                redirect_uri:
                  type: string
                '':
                  type: string
              required:
                - grant_type
                - redirect_uri
            examples:
              Authorization Code:
                value:
                  grant_type: authorization_code
                  code: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImp0aSI6ImUzMTU5ZjIyLTI1OTQtNGNiYS1hMDMzLTRhNWY4MGQ1MmQwZiIsImlhdCI6MTU4OTg3NjI4MywiZXhwIjoxNTg5ODc5ODgzfQ.H4DoU_zLXSUvzkSKIdYR3cXhwoQ-9gqkg491DsyTzg4
                  redirect_uri: 'https://sample.application.com/payments'
                  client_id: b9deb6f6-63bd-46bb-823e-dd6ee7200fe8
                  client_secret: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJidXNpbmVzc19pZCI6IjViOGY3ZDg2M2JjNzllOTA3ZmU0OTA1MCIsImNsaWVudF9pZCI6IjFkY2MyNDIwLTY5YjktNGE0YS05MWFmLWZlYTAwYzY2OThlNyIsImVudmlyb25tZW50IjoiREVWRUxPUE1FTlQiLCJpYXQiOjE1ODkyNzE2NTgsImV4cCI6NDcxMzQ3NDA1OH0.N4XSx2CmKkH0OahAn4-MUyK6UA4o80USUVbqJkk2jrE
              Refresh Token:
                value:
                  grant_type: refresh_token
                  refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJidXNpbmVzc19pZCI6IjViOGY3ZDg2M2JjNzllOTA3ZmU0OTA1MCIsImNsaWVudF9pZCI6IjFkY2MyNDIwLTY5YjktNGE0YS05MWFmLWZlYTAwYzY2OThlNyIsInNjb3BlcyI6WyJJTlZPSUNFLlJFQUQiLCJJTlZPSUNFLldSSVRFIl0sImVudmlyb25tZW50IjoiREVWRUxPUE1FTlQiLCJpYXQiOjE1ODkyODEzODgsImV4cCI6MTU4OTI4MTM4OH0.nw6MdpfdVy3Q9G7r5X2iTxBV59NeS8l0J--P0b4mHrg
                  client_id: ''
                  client_secret: ''
              Client Credentials:
                value:
                  grant_type: client_credentials
                  client_id: b9deb6f6-63bd-46bb-823e-dd6ee7200fe8
                  client_secret: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJidXNpbmVzc19pZCI6IjViOGY3ZDg2M2JjNzllOTA3ZmU0OTA1MCIsImNsaWVudF9pZCI6IjFkY2MyNDIwLTY5YjktNGE0YS05MWFmLWZlYTAwYzY2OThlNyIsImVudmlyb25tZW50IjoiREVWRUxPUE1FTlQiLCJpYXQiOjE1ODkyNzE2NTgsImV4cCI6NDcxMzQ3NDA1OH0.N4XSx2CmKkH0OahAn4-MUyK6UA4o80USUVbqJkk2jrE
        description: |-
          - Use grant_type `authorization_code` to exchange `code` with access token that you can use to request API on behalf of your customers
          - Use grant_type `client_credentials` to request access token that you can use to request API on your application behalf
          - Use grant_type `refresh_token` to refresh access token
      description: |+
        Access token is a token that you will use to request to Xendit APIs either on behalf of your application or on behalf of your customers. Xendit will perform authorization against your
        This endpoint allows user to manage access token, so that you can use the access token to authorize your application in any API requests. You'll use this endpoint if:
        - you need an access token for any oAuth 2.0 flow (Authorization Code or Client Credentials)
        - you need to refresh your access token



components:
  schemas: {}
  securitySchemes: {}
